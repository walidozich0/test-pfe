//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 21-05-2025 19:15:12
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace BD.BloodTransfusionCenter.Core
{

    public static partial class BloodOutOperationConverter
    {

        public static BloodOutOperationDTO ToDto(this BloodOutOperation source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static BloodOutOperationDTO ToDtoWithRelated(this BloodOutOperation source, int level)
        {
            if (source == null)
              return null;

            var target = new BloodOutOperationDTO();

            // Properties
            target.Id = source.Id;
            target.OutOperationType = source.OutOperationType;
            target.OutDate = source.OutDate;
            target.BloodDonationId = source.BloodDonationId;

            // Navigation Properties
            if (level > 0) {
              target.BloodDonation = source.BloodDonation.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static BloodOutOperation ToEntity(this BloodOutOperationDTO source)
        {
            if (source == null)
              return null;

            var target = new BloodOutOperation();

            // Properties
            target.Id = source.Id;
            target.OutOperationType = source.OutOperationType;
            target.OutDate = source.OutDate;
            target.BloodDonationId = source.BloodDonationId;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<BloodOutOperationDTO> ToDtos(this IEnumerable<BloodOutOperation> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<BloodOutOperationDTO> ToDtosWithRelated(this IEnumerable<BloodOutOperation> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<BloodOutOperation> ToEntities(this IEnumerable<BloodOutOperationDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(BloodOutOperation source, BloodOutOperationDTO target);

        static partial void OnEntityCreating(BloodOutOperationDTO source, BloodOutOperation target);

    }

}
