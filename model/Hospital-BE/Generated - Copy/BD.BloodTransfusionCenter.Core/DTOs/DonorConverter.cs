//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 21-05-2025 19:15:12
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace BD.BloodTransfusionCenter.Core
{

    public static partial class DonorConverter
    {

        public static DonorDTO ToDto(this Donor source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static DonorDTO ToDtoWithRelated(this Donor source, int level)
        {
            if (source == null)
              return null;

            var target = new DonorDTO();

            // Properties
            target.Id = source.Id;
            target.CorrelationId = source.CorrelationId;
            target.Name = source.Name;
            target.BirthDate = source.BirthDate;
            target.BloodGroup = source.BloodGroup;
            target.NIN = source.NIN;
            target.Tel = source.Tel;
            target.Email = source.Email;
            target.NotesForBTC = source.NotesForBTC;
            target.LastDonationDate = source.LastDonationDate;
            target.CommuneId = source.CommuneId;

            // Navigation Properties
            if (level > 0) {
              target.BloodDonations = source.BloodDonations.ToDtosWithRelated(level - 1);
              target.Commune = source.Commune.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static Donor ToEntity(this DonorDTO source)
        {
            if (source == null)
              return null;

            var target = new Donor();

            // Properties
            target.Id = source.Id;
            target.CorrelationId = source.CorrelationId;
            target.Name = source.Name;
            target.BirthDate = source.BirthDate;
            target.BloodGroup = source.BloodGroup;
            target.NIN = source.NIN;
            target.Tel = source.Tel;
            target.Email = source.Email;
            target.NotesForBTC = source.NotesForBTC;
            target.LastDonationDate = source.LastDonationDate;
            target.CommuneId = source.CommuneId;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<DonorDTO> ToDtos(this IEnumerable<Donor> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<DonorDTO> ToDtosWithRelated(this IEnumerable<Donor> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<Donor> ToEntities(this IEnumerable<DonorDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(Donor source, DonorDTO target);

        static partial void OnEntityCreating(DonorDTO source, Donor target);

    }

}
