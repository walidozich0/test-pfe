//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Data Transfer Object template.
// Code is generated on: 21-05-2025 19:15:12
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;

namespace BD.BloodTransfusionCenter.Core
{

    public static partial class BloodDonationConverter
    {

        public static BloodDonationDTO ToDto(this BloodDonation source)
        {
            return source.ToDtoWithRelated(0);
        }

        public static BloodDonationDTO ToDtoWithRelated(this BloodDonation source, int level)
        {
            if (source == null)
              return null;

            var target = new BloodDonationDTO();

            // Properties
            target.Id = source.Id;
            target.DonationStatus = source.DonationStatus;
            target.DonationDate = source.DonationDate;
            target.Type = source.Type;
            target.Group = source.Group;
            target.LotNumber = source.LotNumber;
            target.DonorId = source.DonorId;
            target.BloodDonationRequestId = source.BloodDonationRequestId;

            // Navigation Properties
            if (level > 0) {
              target.Donor = source.Donor.ToDtoWithRelated(level - 1);
              target.BloodDonationRequest = source.BloodDonationRequest.ToDtoWithRelated(level - 1);
            }

            // User-defined partial method
            OnDtoCreating(source, target);

            return target;
        }

        public static BloodDonation ToEntity(this BloodDonationDTO source)
        {
            if (source == null)
              return null;

            var target = new BloodDonation();

            // Properties
            target.Id = source.Id;
            target.DonationStatus = source.DonationStatus;
            target.DonationDate = source.DonationDate;
            target.Type = source.Type;
            target.Group = source.Group;
            target.LotNumber = source.LotNumber;
            target.DonorId = source.DonorId;
            target.BloodDonationRequestId = source.BloodDonationRequestId;

            // User-defined partial method
            OnEntityCreating(source, target);

            return target;
        }

        public static List<BloodDonationDTO> ToDtos(this IEnumerable<BloodDonation> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDto())
              .ToList();

            return target;
        }

        public static List<BloodDonationDTO> ToDtosWithRelated(this IEnumerable<BloodDonation> source, int level)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToDtoWithRelated(level))
              .ToList();

            return target;
        }

        public static List<BloodDonation> ToEntities(this IEnumerable<BloodDonationDTO> source)
        {
            if (source == null)
              return null;

            var target = source
              .Select(src => src.ToEntity())
              .ToList();

            return target;
        }

        static partial void OnDtoCreating(BloodDonation source, BloodDonationDTO target);

        static partial void OnEntityCreating(BloodDonationDTO source, BloodDonation target);

    }

}
